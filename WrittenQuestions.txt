Kepei Lei
HW1
Written Questions

Stack Experiments:
1. The result is 8.0
   Since there is no end parentheses, the calculating process is never triggered.
   Thus, when displaying the result, it is just the top of the value stack (8)
   ops (from bottom to top) : ["+"]
   val (from bottom to top) : [6.0]
2. -99.0
   There is no evaluation, so the system is going to print the top and the only
   element in the stack
   ops (from bottom to top) : [] (empty)
   val (from bottom to top) : [] (empty)
3. 99.0
   Again, there is no end parentheses to trigger the evaluating process, thus the
   minus sign is never popped. So the result will be the top of the value stack (99)
   ops (from bottom to top) : ["-"]
   val (from bottom to top) : [] (empty)
4. 21.666666666666668
   This input fits the rule for the Evaluate program. There is end parentheses everywhere,
   even though there are some unnecessary ones mathematically. But the end parentheses are
   necessary for the program to evaluate the formula
   ops (from bottom to top) : [] (empty)
   val (from bottom to top) : [] (empty)
5. 9.0
   This still works properly due to how this algorithm works. First of all, the algorithm ignores the 
   start parentheses so the formula becomes "2 + 3 + ) 4 )". Also, since the algorithm uses end parentheses
   to trigger the calculation and there are only plus sign, there only needs to be two end parentheses for the algorithm
   to work properly
   ops (from bottom to top) : [] (empty)
   val (from bottom to top) : [] (empty)
7. 2.0
   Like 4, the result of this input makes sense mathematically. It takes 5 to the 0.5 power first
   (Which is the same as square root), then take the integer part of the answer
   ops (from bottom to top) : [] (empty)
   val (from bottom to top) : [] (empty)
------------------

1.
2.
3.
4.
5.
6.


